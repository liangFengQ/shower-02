<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yuan.boot.shower.db.mapper.OrderItemMapper">
  <resultMap id="BaseResultMap" type="org.yuan.boot.shower.db.pojo.OrderItem">
    <!--@mbg.generated-->
    <!--@Table order_item-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="customer_open_id" jdbcType="VARCHAR" property="customerOpenId" />
    <result column="customer_union_id" jdbcType="VARCHAR" property="customerUnionId" />
    <result column="customer_nick_name" jdbcType="VARCHAR" property="customerNickName" />
    <result column="item_type" jdbcType="INTEGER" property="itemType" />
    <result column="item_order_no" jdbcType="VARCHAR" property="itemOrderNo" />
    <result column="device_type" jdbcType="INTEGER" property="deviceType" />
    <result column="device_id" jdbcType="BIGINT" property="deviceId" />
    <result column="device_code" jdbcType="VARCHAR" property="deviceCode" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="price_unit" jdbcType="INTEGER" property="priceUnit" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="remain_price" jdbcType="DECIMAL" property="remainPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, create_time, update_time, create_user, update_user, `type`, order_id, order_no, 
    customer_id, customer_open_id, customer_union_id, customer_nick_name, item_type, 
    item_order_no, device_type, device_id, device_code, price, price_unit, start_time, 
    end_time, total_price, remain_price
  </sql>
  <select id="selectByExample" parameterType="org.yuan.boot.shower.db.pojo.OrderItemExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from order_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from order_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.yuan.boot.shower.db.pojo.OrderItemExample">
    <!--@mbg.generated-->
    delete from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.yuan.boot.shower.db.pojo.OrderItem">
    <!--@mbg.generated-->
    insert into order_item (id, create_time, update_time, 
      create_user, update_user, `type`, 
      order_id, order_no, customer_id, 
      customer_open_id, customer_union_id, customer_nick_name, 
      item_type, item_order_no, device_type, 
      device_id, device_code, price, 
      price_unit, start_time, end_time, 
      total_price, remain_price)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{customerId,jdbcType=BIGINT}, 
      #{customerOpenId,jdbcType=VARCHAR}, #{customerUnionId,jdbcType=VARCHAR}, #{customerNickName,jdbcType=VARCHAR}, 
      #{itemType,jdbcType=INTEGER}, #{itemOrderNo,jdbcType=VARCHAR}, #{deviceType,jdbcType=INTEGER}, 
      #{deviceId,jdbcType=BIGINT}, #{deviceCode,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{priceUnit,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{totalPrice,jdbcType=DECIMAL}, #{remainPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="org.yuan.boot.shower.db.pojo.OrderItem">
    <!--@mbg.generated-->
    insert into order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerOpenId != null">
        customer_open_id,
      </if>
      <if test="customerUnionId != null">
        customer_union_id,
      </if>
      <if test="customerNickName != null">
        customer_nick_name,
      </if>
      <if test="itemType != null">
        item_type,
      </if>
      <if test="itemOrderNo != null">
        item_order_no,
      </if>
      <if test="deviceType != null">
        device_type,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="deviceCode != null">
        device_code,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="priceUnit != null">
        price_unit,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="remainPrice != null">
        remain_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerOpenId != null">
        #{customerOpenId,jdbcType=VARCHAR},
      </if>
      <if test="customerUnionId != null">
        #{customerUnionId,jdbcType=VARCHAR},
      </if>
      <if test="customerNickName != null">
        #{customerNickName,jdbcType=VARCHAR},
      </if>
      <if test="itemType != null">
        #{itemType,jdbcType=INTEGER},
      </if>
      <if test="itemOrderNo != null">
        #{itemOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="deviceCode != null">
        #{deviceCode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="priceUnit != null">
        #{priceUnit,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="remainPrice != null">
        #{remainPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.yuan.boot.shower.db.pojo.OrderItemExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update order_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.customerOpenId != null">
        customer_open_id = #{record.customerOpenId,jdbcType=VARCHAR},
      </if>
      <if test="record.customerUnionId != null">
        customer_union_id = #{record.customerUnionId,jdbcType=VARCHAR},
      </if>
      <if test="record.customerNickName != null">
        customer_nick_name = #{record.customerNickName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemType != null">
        item_type = #{record.itemType,jdbcType=INTEGER},
      </if>
      <if test="record.itemOrderNo != null">
        item_order_no = #{record.itemOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceType != null">
        device_type = #{record.deviceType,jdbcType=INTEGER},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=BIGINT},
      </if>
      <if test="record.deviceCode != null">
        device_code = #{record.deviceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.priceUnit != null">
        price_unit = #{record.priceUnit,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.remainPrice != null">
        remain_price = #{record.remainPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update order_item
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      customer_open_id = #{record.customerOpenId,jdbcType=VARCHAR},
      customer_union_id = #{record.customerUnionId,jdbcType=VARCHAR},
      customer_nick_name = #{record.customerNickName,jdbcType=VARCHAR},
      item_type = #{record.itemType,jdbcType=INTEGER},
      item_order_no = #{record.itemOrderNo,jdbcType=VARCHAR},
      device_type = #{record.deviceType,jdbcType=INTEGER},
      device_id = #{record.deviceId,jdbcType=BIGINT},
      device_code = #{record.deviceCode,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      price_unit = #{record.priceUnit,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      remain_price = #{record.remainPrice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.yuan.boot.shower.db.pojo.OrderItem">
    <!--@mbg.generated-->
    update order_item
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerOpenId != null">
        customer_open_id = #{customerOpenId,jdbcType=VARCHAR},
      </if>
      <if test="customerUnionId != null">
        customer_union_id = #{customerUnionId,jdbcType=VARCHAR},
      </if>
      <if test="customerNickName != null">
        customer_nick_name = #{customerNickName,jdbcType=VARCHAR},
      </if>
      <if test="itemType != null">
        item_type = #{itemType,jdbcType=INTEGER},
      </if>
      <if test="itemOrderNo != null">
        item_order_no = #{itemOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        device_type = #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="deviceCode != null">
        device_code = #{deviceCode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="priceUnit != null">
        price_unit = #{priceUnit,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="remainPrice != null">
        remain_price = #{remainPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yuan.boot.shower.db.pojo.OrderItem">
    <!--@mbg.generated-->
    update order_item
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=BIGINT},
      customer_open_id = #{customerOpenId,jdbcType=VARCHAR},
      customer_union_id = #{customerUnionId,jdbcType=VARCHAR},
      customer_nick_name = #{customerNickName,jdbcType=VARCHAR},
      item_type = #{itemType,jdbcType=INTEGER},
      item_order_no = #{itemOrderNo,jdbcType=VARCHAR},
      device_type = #{deviceType,jdbcType=INTEGER},
      device_id = #{deviceId,jdbcType=BIGINT},
      device_code = #{deviceCode,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      price_unit = #{priceUnit,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      remain_price = #{remainPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>