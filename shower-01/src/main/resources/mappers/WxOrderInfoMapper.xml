<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yuan.boot.shower.db.mapper.WxOrderInfoMapper">
  <resultMap id="BaseResultMap" type="org.yuan.boot.shower.db.pojo.WxOrderInfo">
    <!--@mbg.generated-->
    <!--@Table wx_order_info-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_open_id" jdbcType="VARCHAR" property="customerOpenId" />
    <result column="device_id" jdbcType="BIGINT" property="deviceId" />
    <result column="device_code" jdbcType="VARCHAR" property="deviceCode" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="predicate_pay_time" jdbcType="TIMESTAMP" property="predicatePayTime" />
    <result column="final_pay_time" jdbcType="TIMESTAMP" property="finalPayTime" />
    <result column="predicate_decimal" jdbcType="DECIMAL" property="predicateDecimal" />
    <result column="remain_decimal" jdbcType="DECIMAL" property="remainDecimal" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="spend_time" jdbcType="DECIMAL" property="spendTime" />
    <result column="min_decimal" jdbcType="DECIMAL" property="minDecimal" />
    <result column="per_decimal" jdbcType="DECIMAL" property="perDecimal" />
    <result column="ext_decimal" jdbcType="DECIMAL" property="extDecimal" />
    <result column="total_decimal" jdbcType="DECIMAL" property="totalDecimal" />
    <result column="leave_time" jdbcType="TIMESTAMP" property="leaveTime" />
    <result column="crate_time" jdbcType="TIMESTAMP" property="crateTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, create_time, order_type, order_no, customer_id, customer_name, customer_open_id, 
    device_id, device_code, pay_status, predicate_pay_time, final_pay_time, predicate_decimal, 
    remain_decimal, start_time, end_time, spend_time, min_decimal, per_decimal, ext_decimal, 
    total_decimal, leave_time, crate_time, update_time
  </sql>
  <select id="selectByExample" parameterType="org.yuan.boot.shower.db.pojo.WxOrderInfoExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wx_order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from wx_order_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from wx_order_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.yuan.boot.shower.db.pojo.WxOrderInfoExample">
    <!--@mbg.generated-->
    delete from wx_order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.yuan.boot.shower.db.pojo.WxOrderInfo">
    <!--@mbg.generated-->
    insert into wx_order_info (id, create_time, order_type, 
      order_no, customer_id, customer_name, 
      customer_open_id, device_id, device_code, 
      pay_status, predicate_pay_time, final_pay_time, 
      predicate_decimal, remain_decimal, start_time, 
      end_time, spend_time, min_decimal, 
      per_decimal, ext_decimal, total_decimal, 
      leave_time, crate_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{orderType,jdbcType=INTEGER}, 
      #{orderNo,jdbcType=VARCHAR}, #{customerId,jdbcType=BIGINT}, #{customerName,jdbcType=VARCHAR}, 
      #{customerOpenId,jdbcType=VARCHAR}, #{deviceId,jdbcType=BIGINT}, #{deviceCode,jdbcType=VARCHAR}, 
      #{payStatus,jdbcType=INTEGER}, #{predicatePayTime,jdbcType=TIMESTAMP}, #{finalPayTime,jdbcType=TIMESTAMP}, 
      #{predicateDecimal,jdbcType=DECIMAL}, #{remainDecimal,jdbcType=DECIMAL}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{spendTime,jdbcType=DECIMAL}, #{minDecimal,jdbcType=DECIMAL}, 
      #{perDecimal,jdbcType=DECIMAL}, #{extDecimal,jdbcType=DECIMAL}, #{totalDecimal,jdbcType=DECIMAL}, 
      #{leaveTime,jdbcType=TIMESTAMP}, #{crateTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.yuan.boot.shower.db.pojo.WxOrderInfo">
    <!--@mbg.generated-->
    insert into wx_order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerOpenId != null">
        customer_open_id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="deviceCode != null">
        device_code,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="predicatePayTime != null">
        predicate_pay_time,
      </if>
      <if test="finalPayTime != null">
        final_pay_time,
      </if>
      <if test="predicateDecimal != null">
        predicate_decimal,
      </if>
      <if test="remainDecimal != null">
        remain_decimal,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="spendTime != null">
        spend_time,
      </if>
      <if test="minDecimal != null">
        min_decimal,
      </if>
      <if test="perDecimal != null">
        per_decimal,
      </if>
      <if test="extDecimal != null">
        ext_decimal,
      </if>
      <if test="totalDecimal != null">
        total_decimal,
      </if>
      <if test="leaveTime != null">
        leave_time,
      </if>
      <if test="crateTime != null">
        crate_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerOpenId != null">
        #{customerOpenId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="deviceCode != null">
        #{deviceCode,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="predicatePayTime != null">
        #{predicatePayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finalPayTime != null">
        #{finalPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="predicateDecimal != null">
        #{predicateDecimal,jdbcType=DECIMAL},
      </if>
      <if test="remainDecimal != null">
        #{remainDecimal,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="spendTime != null">
        #{spendTime,jdbcType=DECIMAL},
      </if>
      <if test="minDecimal != null">
        #{minDecimal,jdbcType=DECIMAL},
      </if>
      <if test="perDecimal != null">
        #{perDecimal,jdbcType=DECIMAL},
      </if>
      <if test="extDecimal != null">
        #{extDecimal,jdbcType=DECIMAL},
      </if>
      <if test="totalDecimal != null">
        #{totalDecimal,jdbcType=DECIMAL},
      </if>
      <if test="leaveTime != null">
        #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crateTime != null">
        #{crateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.yuan.boot.shower.db.pojo.WxOrderInfoExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from wx_order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update wx_order_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderType != null">
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerOpenId != null">
        customer_open_id = #{record.customerOpenId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=BIGINT},
      </if>
      <if test="record.deviceCode != null">
        device_code = #{record.deviceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.predicatePayTime != null">
        predicate_pay_time = #{record.predicatePayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finalPayTime != null">
        final_pay_time = #{record.finalPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.predicateDecimal != null">
        predicate_decimal = #{record.predicateDecimal,jdbcType=DECIMAL},
      </if>
      <if test="record.remainDecimal != null">
        remain_decimal = #{record.remainDecimal,jdbcType=DECIMAL},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.spendTime != null">
        spend_time = #{record.spendTime,jdbcType=DECIMAL},
      </if>
      <if test="record.minDecimal != null">
        min_decimal = #{record.minDecimal,jdbcType=DECIMAL},
      </if>
      <if test="record.perDecimal != null">
        per_decimal = #{record.perDecimal,jdbcType=DECIMAL},
      </if>
      <if test="record.extDecimal != null">
        ext_decimal = #{record.extDecimal,jdbcType=DECIMAL},
      </if>
      <if test="record.totalDecimal != null">
        total_decimal = #{record.totalDecimal,jdbcType=DECIMAL},
      </if>
      <if test="record.leaveTime != null">
        leave_time = #{record.leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.crateTime != null">
        crate_time = #{record.crateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update wx_order_info
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      order_type = #{record.orderType,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      customer_open_id = #{record.customerOpenId,jdbcType=VARCHAR},
      device_id = #{record.deviceId,jdbcType=BIGINT},
      device_code = #{record.deviceCode,jdbcType=VARCHAR},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      predicate_pay_time = #{record.predicatePayTime,jdbcType=TIMESTAMP},
      final_pay_time = #{record.finalPayTime,jdbcType=TIMESTAMP},
      predicate_decimal = #{record.predicateDecimal,jdbcType=DECIMAL},
      remain_decimal = #{record.remainDecimal,jdbcType=DECIMAL},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      spend_time = #{record.spendTime,jdbcType=DECIMAL},
      min_decimal = #{record.minDecimal,jdbcType=DECIMAL},
      per_decimal = #{record.perDecimal,jdbcType=DECIMAL},
      ext_decimal = #{record.extDecimal,jdbcType=DECIMAL},
      total_decimal = #{record.totalDecimal,jdbcType=DECIMAL},
      leave_time = #{record.leaveTime,jdbcType=TIMESTAMP},
      crate_time = #{record.crateTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.yuan.boot.shower.db.pojo.WxOrderInfo">
    <!--@mbg.generated-->
    update wx_order_info
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerOpenId != null">
        customer_open_id = #{customerOpenId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="deviceCode != null">
        device_code = #{deviceCode,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="predicatePayTime != null">
        predicate_pay_time = #{predicatePayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finalPayTime != null">
        final_pay_time = #{finalPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="predicateDecimal != null">
        predicate_decimal = #{predicateDecimal,jdbcType=DECIMAL},
      </if>
      <if test="remainDecimal != null">
        remain_decimal = #{remainDecimal,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="spendTime != null">
        spend_time = #{spendTime,jdbcType=DECIMAL},
      </if>
      <if test="minDecimal != null">
        min_decimal = #{minDecimal,jdbcType=DECIMAL},
      </if>
      <if test="perDecimal != null">
        per_decimal = #{perDecimal,jdbcType=DECIMAL},
      </if>
      <if test="extDecimal != null">
        ext_decimal = #{extDecimal,jdbcType=DECIMAL},
      </if>
      <if test="totalDecimal != null">
        total_decimal = #{totalDecimal,jdbcType=DECIMAL},
      </if>
      <if test="leaveTime != null">
        leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="crateTime != null">
        crate_time = #{crateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yuan.boot.shower.db.pojo.WxOrderInfo">
    <!--@mbg.generated-->
    update wx_order_info
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      order_type = #{orderType,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=BIGINT},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_open_id = #{customerOpenId,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=BIGINT},
      device_code = #{deviceCode,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=INTEGER},
      predicate_pay_time = #{predicatePayTime,jdbcType=TIMESTAMP},
      final_pay_time = #{finalPayTime,jdbcType=TIMESTAMP},
      predicate_decimal = #{predicateDecimal,jdbcType=DECIMAL},
      remain_decimal = #{remainDecimal,jdbcType=DECIMAL},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      spend_time = #{spendTime,jdbcType=DECIMAL},
      min_decimal = #{minDecimal,jdbcType=DECIMAL},
      per_decimal = #{perDecimal,jdbcType=DECIMAL},
      ext_decimal = #{extDecimal,jdbcType=DECIMAL},
      total_decimal = #{totalDecimal,jdbcType=DECIMAL},
      leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      crate_time = #{crateTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>